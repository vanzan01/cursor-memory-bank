---
description: "–°–∏—Å—Ç–µ–º–∞ —Ñ–æ–Ω–æ–≤–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Å–∏—Å—Ç–µ–º—ã"
globs: "**/**"
alwaysApply: true
---

# BACKGROUND SERVER EXECUTION SYSTEM

> **TL;DR:** –°–∏—Å—Ç–µ–º–∞ —Ñ–æ–Ω–æ–≤–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –≤ background —Ä–µ–∂–∏–º–µ, –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —Å–∏—Å—Ç–µ–º—ã –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å –¥—Ä—É–≥–∏–º–∏ –∑–∞–¥–∞—á–∞–º–∏.

## üöÄ –ü–†–ò–ù–¶–ò–ü–´ –§–û–ù–û–í–û–ì–û –í–´–ü–û–õ–ù–ï–ù–ò–Ø

### –û—Å–Ω–æ–≤–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
**–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π background —Ä–µ–∂–∏–º**
- –í—Å–µ —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–æ–ª–∂–Ω—ã –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –≤ —Ñ–æ–Ω–µ
- –°–∏—Å—Ç–µ–º–∞ –¥–æ–ª–∂–Ω–∞ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–±–æ—Ç—É –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
- –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–æ–≤ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º
- –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–æ–Ω–æ–≤—ã–º–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏

**–¢–∏–ø—ã —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –∫–æ–º–∞–Ω–¥**
- Web —Å–µ—Ä–≤–µ—Ä—ã (npm start, yarn dev, bun dev)
- API —Å–µ—Ä–≤–µ—Ä—ã (Express, FastAPI, Spring Boot)
- –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä—ã (PostgreSQL, MongoDB, Redis)
- –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã

## üîß –°–¢–†–ê–¢–ï–ì–ò–ò –§–û–ù–û–í–û–ì–û –ó–ê–ü–£–°–ö–ê

### –ë–∞–∑–æ–≤—ã–π —Ñ–æ–Ω–æ–≤—ã–π –∑–∞–ø—É—Å–∫
```bash
# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –≤ —Ñ–æ–Ω–µ —Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º
start_server_background() {
  local server_command="$1"
  local server_name="${2:-server}"
  local port="${3:-3000}"
  local log_file="${4:-/tmp/${server_name}.log}"

  echo "üöÄ –ó–∞–ø—É—Å–∫ $server_name –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ"
  echo "üìã –ö–æ–º–∞–Ω–¥–∞: $server_command"
  echo "üåê –ü–æ—Ä—Ç: $port"
  echo "üìù –õ–æ–≥ —Ñ–∞–π–ª: $log_file"

  # –ó–∞–ø—É—Å–∫ –≤ —Ñ–æ–Ω–µ —Å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –ª–æ–≥–æ–≤
  nohup $server_command > "$log_file" 2>&1 &
  local server_pid=$!

  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ PID –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
  echo "$server_pid" > "/tmp/${server_name}.pid"

  echo "‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–µ (PID: $server_pid)"
  echo "üìã –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: stop_server_background $server_name"

  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
  check_server_readiness "$server_name" "$port" 30

  return 0
}
```

### –£–º–Ω—ã–π –∑–∞–ø—É—Å–∫ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ø–æ—Ä—Ç–∞
```bash
# –ó–∞–ø—É—Å–∫ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∑–∞–Ω—è—Ç–æ—Å—Ç–∏ –ø–æ—Ä—Ç–∞
smart_server_start() {
  local server_command="$1"
  local server_name="$2"
  local port="$3"

  echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–∞ $port"

  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–Ω—è—Ç–æ—Å—Ç–∏ –ø–æ—Ä—Ç–∞
  if lsof -i ":$port" >/dev/null 2>&1; then
    echo "‚ö†Ô∏è –ü–æ—Ä—Ç $port —É–∂–µ –∑–∞–Ω—è—Ç"
    echo "üìã –ü—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç—É $port:"
    lsof -i ":$port"

    read -p "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–æ—Ü–µ—Å—Å? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
      echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ –Ω–∞ –ø–æ—Ä—Ç—É $port"
      kill $(lsof -t -i ":$port") 2>/dev/null || true
      sleep 2
    else
      echo "‚ùå –û—Ç–º–µ–Ω—è–µ–º –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞"
      return 1
    fi
  fi

  # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –≤ —Ñ–æ–Ω–µ
  start_server_background "$server_command" "$server_name" "$port"
}
```

### –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ñ–æ–Ω–æ–≤—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤
```bash
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
check_server_readiness() {
  local server_name="$1"
  local port="$2"
  local timeout="${3:-30}"
  local check_url="${4:-http://localhost:$port}"

  echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞ $server_name (timeout: $timeout —Å–µ–∫)"

  local elapsed=0
  local check_interval=2

  while [ $elapsed -lt $timeout ]; do
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP –æ—Ç–≤–µ—Ç–∞
    if curl -s "$check_url" >/dev/null 2>&1; then
      echo "‚úÖ –°–µ—Ä–≤–µ—Ä $server_name –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ"
      echo "üåê –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: $check_url"
      return 0
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å –µ—â–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
    local pid_file="/tmp/${server_name}.pid"
    if [ -f "$pid_file" ]; then
      local server_pid=$(cat "$pid_file")
      if ! kill -0 "$server_pid" 2>/dev/null; then
        echo "‚ùå –ü—Ä–æ—Ü–µ—Å—Å —Å–µ—Ä–≤–µ—Ä–∞ $server_name –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ"
        echo "üìù –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: /tmp/${server_name}.log"
        return 1
      fi
    fi

    sleep $check_interval
    elapsed=$((elapsed + check_interval))
    printf "."
  done

  echo ""
  echo "‚è∞ Timeout: –°–µ—Ä–≤–µ—Ä $server_name –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª –≤ —Ç–µ—á–µ–Ω–∏–µ $timeout —Å–µ–∫—É–Ω–¥"
  echo "üìù –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: /tmp/${server_name}.log"
  return 124
}
```

## üìã –£–ü–†–ê–í–õ–ï–ù–ò–ï –§–û–ù–û–í–´–ú–ò –ü–†–û–¶–ï–°–°–ê–ú–ò

### –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–æ–Ω–æ–≤—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤
```bash
# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ –∏–º–µ–Ω–∏
stop_server_background() {
  local server_name="$1"
  local pid_file="/tmp/${server_name}.pid"

  if [ ! -f "$pid_file" ]; then
    echo "‚ùå PID —Ñ–∞–π–ª –¥–ª—è $server_name –Ω–µ –Ω–∞–π–¥–µ–Ω"
    return 1
  fi

  local server_pid=$(cat "$pid_file")
  echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ $server_name (PID: $server_pid)"

  # –ú—è–≥–∫–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞
  if kill -TERM "$server_pid" 2>/dev/null; then
    echo "üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω —Å–∏–≥–Ω–∞–ª TERM"

    # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    local timeout=10
    local elapsed=0

    while [ $elapsed -lt $timeout ] && kill -0 "$server_pid" 2>/dev/null; do
      sleep 1
      elapsed=$((elapsed + 1))
      printf "."
    done
    echo ""

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    if kill -0 "$server_pid" 2>/dev/null; then
      echo "‚ö†Ô∏è –ü—Ä–æ—Ü–µ—Å—Å –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞"
      kill -KILL "$server_pid" 2>/dev/null || true
    fi

    echo "‚úÖ –°–µ—Ä–≤–µ—Ä $server_name –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
  else
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å $server_pid"
    return 1
  fi

  # –û—á–∏—Å—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤
  rm -f "$pid_file"
  rm -f "/tmp/${server_name}.log"
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Ñ–æ–Ω–æ–≤—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤
stop_all_servers() {
  echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Ñ–æ–Ω–æ–≤—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤"

  local pid_files=$(find /tmp -name "*.pid" -type f 2>/dev/null)

  if [ -z "$pid_files" ]; then
    echo "‚ÑπÔ∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ñ–æ–Ω–æ–≤—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤"
    return 0
  fi

  for pid_file in $pid_files; do
    local server_name=$(basename "$pid_file" .pid)
    echo "üîÑ –û—Å—Ç–∞–Ω–æ–≤–∫–∞: $server_name"
    stop_server_background "$server_name"
  done

  echo "‚úÖ –í—Å–µ —Å–µ—Ä–≤–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}
```

### –°—Ç–∞—Ç—É—Å —Ñ–æ–Ω–æ–≤—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤
```bash
# –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Ñ–æ–Ω–æ–≤—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤
show_servers_status() {
  echo "üìä –°–¢–ê–¢–£–° –§–û–ù–û–í–´–• –°–ï–†–í–ï–†–û–í"
  echo "=========================="

  local pid_files=$(find /tmp -name "*.pid" -type f 2>/dev/null)

  if [ -z "$pid_files" ]; then
    echo "‚ÑπÔ∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ñ–æ–Ω–æ–≤—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤"
    return 0
  fi

  printf "%-15s %-8s %-10s %-20s\n" "–°–ï–†–í–ï–†" "PID" "–°–¢–ê–¢–£–°" "–í–†–ï–ú–Ø –†–ê–ë–û–¢–´"
  printf "%-15s %-8s %-10s %-20s\n" "-------" "---" "------" "------------"

  for pid_file in $pid_files; do
    local server_name=$(basename "$pid_file" .pid)
    local server_pid=$(cat "$pid_file" 2>/dev/null)

    if [ -n "$server_pid" ] && kill -0 "$server_pid" 2>/dev/null; then
      local uptime=$(ps -o etime= -p "$server_pid" 2>/dev/null | tr -d ' ')
      printf "%-15s %-8s %-10s %-20s\n" "$server_name" "$server_pid" "RUNNING" "$uptime"
    else
      printf "%-15s %-8s %-10s %-20s\n" "$server_name" "$server_pid" "STOPPED" "N/A"
      # –û—á–∏—Å—Ç–∫–∞ –º–µ—Ä—Ç–≤–æ–≥–æ PID —Ñ–∞–π–ª–∞
      rm -f "$pid_file"
    fi
  done
}
```

## üîÑ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –£–ü–†–ê–í–õ–ï–ù–ò–ï

### –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫
```bash
# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤
monitor_and_restart() {
  local server_name="$1"
  local server_command="$2"
  local port="$3"
  local check_interval="${4:-30}"

  echo "üëÅÔ∏è –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–ª—è $server_name (–ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ $check_interval —Å–µ–∫)"

  while true; do
    local pid_file="/tmp/${server_name}.pid"

    if [ -f "$pid_file" ]; then
      local server_pid=$(cat "$pid_file")

      # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–±–æ—Ç–∞–µ—Ç
      if kill -0 "$server_pid" 2>/dev/null; then
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç
        if ! curl -s "http://localhost:$port" >/dev/null 2>&1; then
          echo "‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä $server_name –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫..."
          stop_server_background "$server_name"
          sleep 5
          start_server_background "$server_command" "$server_name" "$port"
        fi
      else
        echo "‚ö†Ô∏è –ü—Ä–æ—Ü–µ—Å—Å $server_name –∑–∞–≤–µ—Ä—à–∏–ª—Å—è, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫..."
        rm -f "$pid_file"
        start_server_background "$server_command" "$server_name" "$port"
      fi
    else
      echo "‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä $server_name –Ω–µ –∑–∞–ø—É—â–µ–Ω, –∑–∞–ø—É—Å–∫..."
      start_server_background "$server_command" "$server_name" "$port"
    fi

    sleep "$check_interval"
  done
}
```

### Graceful shutdown
```bash
# –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
setup_graceful_shutdown() {
  echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–æ–≤"

  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤
  trap 'graceful_shutdown' EXIT INT TERM

  graceful_shutdown() {
    echo ""
    echo "üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è, –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤..."
    stop_all_servers
    echo "üëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã"
    exit 0
  }
}
```

## üìä –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –ò –ú–û–ù–ò–¢–û–†–ò–ù–ì

### –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
```bash
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —Ñ–æ–Ω–æ–≤—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤
setup_server_logging() {
  local server_name="$1"
  local log_level="${2:-info}"
  local log_dir="/tmp/server_logs"

  mkdir -p "$log_dir"

  local log_file="$log_dir/${server_name}.log"
  local error_log="$log_dir/${server_name}.error.log"

  echo "üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è $server_name"
  echo "   üìÑ –û—Å–Ω–æ–≤–Ω–æ–π –ª–æ–≥: $log_file"
  echo "   ‚ùå –õ–æ–≥ –æ—à–∏–±–æ–∫: $error_log"

  # –†–æ—Ç–∞—Ü–∏—è –ª–æ–≥–æ–≤
  if [ -f "$log_file" ] && [ $(stat -f%z "$log_file" 2>/dev/null || stat -c%s "$log_file") -gt 10485760 ]; then
    mv "$log_file" "${log_file}.old"
    echo "üîÑ –í—ã–ø–æ–ª–Ω–µ–Ω–∞ —Ä–æ—Ç–∞—Ü–∏—è –ª–æ–≥–∞ $server_name"
  fi

  echo "$log_file"
}

# –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞
show_server_logs() {
  local server_name="$1"
  local lines="${2:-50}"
  local log_file="/tmp/server_logs/${server_name}.log"

  if [ ! -f "$log_file" ]; then
    echo "‚ùå –õ–æ–≥ —Ñ–∞–π–ª –¥–ª—è $server_name –Ω–µ –Ω–∞–π–¥–µ–Ω"
    return 1
  fi

  echo "üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ $lines —Å—Ç—Ä–æ–∫ –ª–æ–≥–∞ –¥–ª—è $server_name:"
  echo "=============================================="
  tail -n "$lines" "$log_file"
}
```

## üéØ –°–ü–ï–¶–ò–ê–õ–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –ó–ê–ü–£–°–ö–ò

### –ó–∞–ø—É—Å–∫ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Å–µ—Ä–≤–µ—Ä–æ–≤
```bash
# –ó–∞–ø—É—Å–∫ Node.js/npm —Å–µ—Ä–≤–µ—Ä–∞
start_npm_server() {
  local project_dir="$1"
  local script_name="${2:-start}"
  local port="${3:-3000}"

  cd "$project_dir" || return 1

  echo "üì¶ –ó–∞–ø—É—Å–∫ npm —Å–µ—Ä–≤–µ—Ä–∞ –≤ $project_dir"
  start_server_background "npm run $script_name" "npm-server" "$port"
}

# –ó–∞–ø—É—Å–∫ Python —Å–µ—Ä–≤–µ—Ä–∞
start_python_server() {
  local script_path="$1"
  local port="${2:-8000}"

  echo "üêç –ó–∞–ø—É—Å–∫ Python —Å–µ—Ä–≤–µ—Ä–∞"
  start_server_background "python $script_path" "python-server" "$port"
}

# –ó–∞–ø—É—Å–∫ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
start_static_server() {
  local directory="$1"
  local port="${2:-8080}"

  echo "üìÅ –ó–∞–ø—É—Å–∫ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è $directory"
  start_server_background "python -m http.server $port" "static-server" "$port"
}
```

## üö® –û–ë–†–ê–ë–û–¢–ö–ê –û–®–ò–ë–û–ö

### –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º
```bash
# –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å —Ñ–æ–Ω–æ–≤—ã–º–∏ —Å–µ—Ä–≤–µ—Ä–∞–º–∏
diagnose_server_issues() {
  local server_name="$1"

  echo "üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ï–†–í–ï–†–ê: $server_name"
  echo "==================================="

  local pid_file="/tmp/${server_name}.pid"
  local log_file="/tmp/server_logs/${server_name}.log"

  # –ü—Ä–æ–≤–µ—Ä–∫–∞ PID —Ñ–∞–π–ª–∞
  if [ ! -f "$pid_file" ]; then
    echo "‚ùå PID —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $pid_file"
    echo "üí° –°–µ—Ä–≤–µ—Ä –≤–æ–∑–º–æ–∂–Ω–æ –Ω–µ –±—ã–ª –∑–∞–ø—É—â–µ–Ω –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è"
    return 1
  fi

  local server_pid=$(cat "$pid_file")
  echo "üìã PID —Å–µ—Ä–≤–µ—Ä–∞: $server_pid"

  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞
  if kill -0 "$server_pid" 2>/dev/null; then
    echo "‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –∞–∫—Ç–∏–≤–µ–Ω"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
    echo "üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:"
    ps -p "$server_pid" -o pid,ppid,%cpu,%mem,etime,cmd
  else
    echo "‚ùå –ü—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω"

    # –ê–Ω–∞–ª–∏–∑ –ª–æ–≥–æ–≤
    if [ -f "$log_file" ]; then
      echo "üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–∞:"
      tail -n 10 "$log_file"
    fi
  fi

  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
  echo "üåê –°—Ç–∞—Ç—É—Å –ø–æ—Ä—Ç–æ–≤:"
  netstat -tulpn 2>/dev/null | grep "$server_pid" || echo "–ù–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ—Ä—Ç–æ–≤"
}
```

–≠—Ç–∞ —Å–∏—Å—Ç–µ–º–∞ —Ñ–æ–Ω–æ–≤–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –Ω–∞–¥–µ–∂–Ω—ã–π –∑–∞–ø—É—Å–∫ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–Ω—ã–º–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏, –ø–æ–∑–≤–æ–ª—è—è Memory Bank —Å–∏—Å—Ç–µ–º–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–±–æ—Ç—É –±–µ–∑ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∞—Ö.