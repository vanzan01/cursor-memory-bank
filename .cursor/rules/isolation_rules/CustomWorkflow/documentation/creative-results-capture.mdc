---
description: "Creative results capture system for Memory Bank creative phases"
globs: "**/creative/**", "**/documentation/**", "**/capture/**"
alwaysApply: false
---

---
description: "Creative results capture system for Memory Bank creative phases"
globs: "**/creative/**", "**/documentation/**", "**/capture/**"
alwaysApply: false
---

# CREATIVE RESULTS CAPTURE SYSTEM

> **TL;DR:** Automated system for capturing, structuring, and preserving creative phase results including architectural decisions, design processes, and implementation guidance.

## 🎯 CAPTURE SYSTEM OVERVIEW

The Creative Results Capture System automatically documents and preserves all outputs from creative phases, ensuring no architectural decisions or design insights are lost and creating a comprehensive knowledge base for future reference.

### Core Capture Components

**Automatic Documentation**
- Real-time capture of creative phase outputs
- Structured metadata extraction
- Decision point identification
- Artifact preservation

**Structured Storage**
- Hierarchical organization by project and date
- Categorization by decision type
- Searchable metadata indexing
- Version control integration

**Quality Assurance**
- Completeness validation
- Consistency checking
- Format standardization
- Integrity verification

## 📸 AUTOMATIC CAPTURE MECHANISMS

### Real-time Documentation Capture

**Creative Phase Monitoring**
```yaml
capture_triggers:
  phase_start:
    - Initialize capture session
    - Create session metadata
    - Set up monitoring hooks

  decision_points:
    - Capture decision context
    - Record alternatives considered
    - Document selection rationale
    - Store supporting artifacts

  phase_completion:
    - Finalize documentation
    - Generate summary report
    - Archive all artifacts
    - Update search indexes
```

**Document Structure Extraction**
- Automatic parsing of creative phase documents
- Identification of key sections (decisions, alternatives, rationale)
- Extraction of architectural diagrams and models
- Capture of discussion notes and comments

### Metadata Generation

**Session Metadata**
```yaml
session_metadata:
  basic_info:
    session_id: "CREATIVE-SESS-2024-12-09-001"
    task_id: "TASK-ID-YYYY-MM-DD"
    start_time: "2024-12-09T10:00:00Z"
    end_time: "2024-12-09T11:30:00Z"
    duration: "90 minutes"

  participants:
    - role: "architect"
      name: "John Doe"
      contribution_level: "high"
    - role: "developer"
      name: "Jane Smith"
      contribution_level: "medium"

  context:
    project_phase: "design"
    complexity_level: "Level 3"
    domain: "web_application"
    technologies: ["React", "Node.js", "PostgreSQL"]

  outcomes:
    decisions_made: 5
    alternatives_considered: 12
    artifacts_created: 3
    follow_up_actions: 2
```

## 🗂️ STRUCTURED STORAGE SYSTEM

### Hierarchical Organization

**Directory Structure**
```
memory-bank/creative/
├── architecture/
│   ├── 2024/
│   │   ├── 12/
│   │   │   ├── 09-task-continuity-architecture/
│   │   │   │   ├── session-metadata.yaml
│   │   │   │   ├── decisions/
│   │   │   │   ├── artifacts/
│   │   │   │   ├── process/
│   │   │   │   └── summary-report.md
│   │   │   └── 08-rules-integration-architecture/
│   │   └── 11/
│   └── 2023/
├── algorithms/
├── ui-ux/
├── data-models/
└── cross-cutting/
```

### Categorization System

**Decision Categories**
- **Architecture**: System design, component organization, integration patterns
- **Algorithm**: Data processing, optimization, computational approaches
- **UI/UX**: User interface design, user experience flows, interaction patterns
- **Data Model**: Database design, data structures, information architecture
- **Cross-cutting**: Security, performance, monitoring, deployment

## 📋 CAPTURE TEMPLATES

### Decision Capture Template

```markdown
# Decision: [Decision Title]

## Metadata
- **Decision ID**: ARCH-XXX-YYYY-MM-DD
- **Date**: YYYY-MM-DD
- **Category**: [architecture|algorithm|ui_ux|data_model|cross_cutting]
- **Impact Level**: [critical|high|medium|low]
- **Confidence**: [1-10]

## Context
### Problem Statement
[Clear description of the problem being solved]

### Constraints
- [Constraint 1]
- [Constraint 2]

### Requirements
- [Requirement 1]
- [Requirement 2]

## Decision Process
### Alternatives Considered
1. **Option 1**: [Description]
   - Pros: [List advantages]
   - Cons: [List disadvantages]

2. **Option 2**: [Description]
   - Pros: [List advantages]
   - Cons: [List disadvantages]

### Selected Option
[Chosen option with brief justification]

### Rationale
[Detailed explanation of why this option was selected]

## Implementation Plan
- **Phase 1**: [Description and timeline]
- **Phase 2**: [Description and timeline]

## Follow-up Actions
- [ ] [Action item 1] - Assigned to: [Person] - Due: [Date]
- [ ] [Action item 2] - Assigned to: [Person] - Due: [Date]
```

## 🔍 SEARCH AND INDEXING

### Metadata Indexing

**Search Index Structure**
```yaml
search_index:
  decisions:
    - decision_id: "ARCH-001-2024-12-09"
      title: "Database Architecture Selection"
      category: "data_architecture"
      keywords: ["database", "postgresql", "scalability", "performance"]
      impact_level: "high"
      date: "2024-12-09"
      success_rate: 0.95
```

### Search Capabilities

**Semantic Search**
- Natural language queries for finding relevant decisions
- Context-aware search based on current project needs
- Similarity matching for architectural patterns
- Success rate weighted recommendations

**Faceted Search**
- Filter by category, impact level, date range
- Search by technology stack or domain
- Filter by success rate or confidence level
- Search by team or participant involvement

## 🔧 INTEGRATION POINTS

### Memory Bank Mode Integration

**VAN Mode**
- Automatic loading of relevant historical decisions
- Pattern suggestions based on project context
- Success rate analysis for proposed approaches

**CREATIVE Mode**
- Real-time capture during creative sessions
- Template provision for structured decision making
- Quality scoring and feedback

**REFLECT Mode**
- Comparison of planned vs. implemented decisions
- Success rate updates based on implementation results
- Lesson learned extraction and documentation

**ARCHIVE Mode**
- Long-term preservation of creative artifacts
- Pattern effectiveness analysis
- Strategic knowledge synthesis

This comprehensive capture system ensures that all creative phase outputs are systematically documented, preserved, and made available for future reference, creating a valuable knowledge base that improves over time.

> **TL;DR:** Automated system for capturing, structuring, and preserving creative phase results including architectural decisions, design processes, and implementation guidance.

## 🎯 CAPTURE SYSTEM OVERVIEW

The Creative Results Capture System automatically documents and preserves all outputs from creative phases, ensuring no architectural decisions or design insights are lost and creating a comprehensive knowledge base for future reference.

### Core Capture Components

**Automatic Documentation**
- Real-time capture of creative phase outputs
- Structured metadata extraction
- Decision point identification
- Artifact preservation

**Structured Storage**
- Hierarchical organization by project and date
- Categorization by decision type
- Searchable metadata indexing
- Version control integration

**Quality Assurance**
- Completeness validation
- Consistency checking
- Format standardization
- Integrity verification

## 📸 AUTOMATIC CAPTURE MECHANISMS

### Real-time Documentation Capture

**Creative Phase Monitoring**
```yaml
capture_triggers:
  phase_start:
    - Initialize capture session
    - Create session metadata
    - Set up monitoring hooks

  decision_points:
    - Capture decision context
    - Record alternatives considered
    - Document selection rationale
    - Store supporting artifacts

  phase_completion:
    - Finalize documentation
    - Generate summary report
    - Archive all artifacts
    - Update search indexes
```

**Document Structure Extraction**
- Automatic parsing of creative phase documents
- Identification of key sections (decisions, alternatives, rationale)
- Extraction of architectural diagrams and models
- Capture of discussion notes and comments

### Metadata Generation

**Session Metadata**
```yaml
session_metadata:
  basic_info:
    session_id: "CREATIVE-SESS-2024-12-09-001"
    task_id: "TASK-ID-YYYY-MM-DD"
    start_time: "2024-12-09T10:00:00Z"
    end_time: "2024-12-09T11:30:00Z"
    duration: "90 minutes"

  participants:
    - role: "architect"
      name: "John Doe"
      contribution_level: "high"
    - role: "developer"
      name: "Jane Smith"
      contribution_level: "medium"

  context:
    project_phase: "design"
    complexity_level: "Level 3"
    domain: "web_application"
    technologies: ["React", "Node.js", "PostgreSQL"]

  outcomes:
    decisions_made: 5
    alternatives_considered: 12
    artifacts_created: 3
    follow_up_actions: 2
```

**Decision Metadata**
```yaml
decision_metadata:
  decision_id: "ARCH-001-2024-12-09"
  title: "Database Architecture Selection"
  category: "data_architecture"
  impact_level: "high"
  confidence_level: 8.5

  context:
    problem_statement: "Need scalable database solution for user data"
    constraints: ["ACID compliance", "< 100ms response time", "budget < $1000/month"]
    requirements: ["handle 10k concurrent users", "99.9% uptime"]

  process:
    alternatives_considered: 4
    evaluation_criteria: ["performance", "cost", "scalability", "maintenance"]
    decision_method: "weighted_scoring_matrix"
    consensus_level: "unanimous"

  outcome:
    selected_option: "PostgreSQL with read replicas"
    rationale: "Best balance of ACID compliance and performance"
    implementation_complexity: "medium"
    estimated_effort: "2 weeks"
```

## 🗂️ STRUCTURED STORAGE SYSTEM

### Hierarchical Organization

**Directory Structure**
```
memory-bank/creative/
├── architecture/
│   ├── 2024/
│   │   ├── 12/
│   │   │   ├── 09-task-continuity-architecture/
│   │   │   │   ├── session-metadata.yaml
│   │   │   │   ├── decisions/
│   │   │   │   │   ├── ARCH-001-database-choice.md
│   │   │   │   │   ├── ARCH-002-api-design.md
│   │   │   │   │   └── ARCH-003-deployment-strategy.md
│   │   │   │   ├── artifacts/
│   │   │   │   │   ├── architecture-diagram.md
│   │   │   │   │   ├── data-model.md
│   │   │   │   │   └── api-specification.yaml
│   │   │   │   ├── process/
│   │   │   │   │   ├── discussion-notes.md
│   │   │   │   │   ├── evaluation-matrices.md
│   │   │   │   │   └── iteration-log.md
│   │   │   │   └── summary-report.md
│   │   │   └── 08-rules-integration-architecture/
│   │   └── 11/
│   └── 2023/
├── algorithms/
├── ui-ux/
├── data-models/
└── cross-cutting/
```

### Categorization System

**Decision Categories**
- **Architecture**: System design, component organization, integration patterns
- **Algorithm**: Data processing, optimization, computational approaches
- **UI/UX**: User interface design, user experience flows, interaction patterns
- **Data Model**: Database design, data structures, information architecture
- **Cross-cutting**: Security, performance, monitoring, deployment

**Impact Levels**
- **Critical**: System-wide impact, affects multiple components
- **High**: Significant impact on major features or components
- **Medium**: Moderate impact on specific features
- **Low**: Minor impact, easily reversible

## 📋 CAPTURE TEMPLATES

### Decision Capture Template

```markdown
# Decision: [Decision Title]

## Metadata
- **Decision ID**: ARCH-XXX-YYYY-MM-DD
- **Date**: YYYY-MM-DD
- **Category**: [architecture|algorithm|ui_ux|data_model|cross_cutting]
- **Impact Level**: [critical|high|medium|low]
- **Confidence**: [1-10]

## Context
### Problem Statement
[Clear description of the problem being solved]

### Constraints
- [Constraint 1]
- [Constraint 2]
- [Constraint 3]

### Requirements
- [Requirement 1]
- [Requirement 2]
- [Requirement 3]

## Decision Process
### Alternatives Considered
1. **Option 1**: [Description]
   - Pros: [List advantages]
   - Cons: [List disadvantages]
   - Effort: [Estimation]

2. **Option 2**: [Description]
   - Pros: [List advantages]
   - Cons: [List disadvantages]
   - Effort: [Estimation]

### Evaluation Criteria
- [Criterion 1]: Weight [X%]
- [Criterion 2]: Weight [Y%]
- [Criterion 3]: Weight [Z%]

### Scoring Matrix
| Option | Criterion 1 | Criterion 2 | Criterion 3 | Total |
|--------|-------------|-------------|-------------|-------|
| Option 1 | [Score] | [Score] | [Score] | [Total] |
| Option 2 | [Score] | [Score] | [Score] | [Total] |

## Decision
### Selected Option
[Chosen option with brief justification]

### Rationale
[Detailed explanation of why this option was selected]

### Implementation Plan
- **Phase 1**: [Description and timeline]
- **Phase 2**: [Description and timeline]
- **Phase 3**: [Description and timeline]

### Success Criteria
- [Measurable criterion 1]
- [Measurable criterion 2]
- [Measurable criterion 3]

### Risks and Mitigation
- **Risk 1**: [Description] → **Mitigation**: [Strategy]
- **Risk 2**: [Description] → **Mitigation**: [Strategy]

## Follow-up Actions
- [ ] [Action item 1] - Assigned to: [Person] - Due: [Date]
- [ ] [Action item 2] - Assigned to: [Person] - Due: [Date]

## Related Decisions
- [Link to related decision 1]
- [Link to related decision 2]

## Artifacts
- [Link to architecture diagram]
- [Link to technical specification]
- [Link to prototype or proof of concept]
```

### Session Summary Template

```markdown
# Creative Session Summary

## Session Information
- **Session ID**: CREATIVE-SESS-YYYY-MM-DD-XXX
- **Task ID**: [Related task identifier]
- **Date**: YYYY-MM-DD
- **Duration**: [X hours Y minutes]
- **Type**: [architecture|algorithm|ui_ux|data_model]

## Participants
- **[Role]**: [Name] - Contribution: [high|medium|low]
- **[Role]**: [Name] - Contribution: [high|medium|low]

## Objectives
- [Primary objective]
- [Secondary objective]
- [Additional goals]

## Decisions Made
1. **[Decision Title]** (ID: ARCH-XXX)
   - Impact: [critical|high|medium|low]
   - Confidence: [1-10]
   - Status: [final|provisional|needs_validation]

2. **[Decision Title]** (ID: ARCH-XXX)
   - Impact: [critical|high|medium|low]
   - Confidence: [1-10]
   - Status: [final|provisional|needs_validation]

## Key Insights
- [Important insight or learning]
- [Architectural principle discovered]
- [Pattern or anti-pattern identified]

## Artifacts Created
- [Artifact name and description]
- [Artifact name and description]

## Open Questions
- [Question requiring further investigation]
- [Dependency on external decision]

## Next Steps
- [ ] [Action item] - Owner: [Person] - Due: [Date]
- [ ] [Action item] - Owner: [Person] - Due: [Date]

## Quality Assessment
- **Process Effectiveness**: [1-10]
- **Decision Quality**: [1-10]
- **Team Collaboration**: [1-10]
- **Time Efficiency**: [1-10]

## Lessons Learned
- [Process improvement opportunity]
- [What worked well]
- [What could be improved]
```

## 🔍 SEARCH AND INDEXING

### Metadata Indexing

**Search Index Structure**
```yaml
search_index:
  decisions:
    - decision_id: "ARCH-001-2024-12-09"
      title: "Database Architecture Selection"
      category: "data_architecture"
      keywords: ["database", "postgresql", "scalability", "performance"]
      impact_level: "high"
      date: "2024-12-09"
      success_rate: 0.95

  patterns:
    - pattern_id: "PAT-DB-001"
      name: "PostgreSQL with Read Replicas"
      category: "data_architecture"
      success_rate: 0.92
      usage_count: 15
      last_used: "2024-12-09"

  artifacts:
    - artifact_id: "ART-ARCH-001"
      type: "architecture_diagram"
      title: "System Architecture Overview"
      related_decisions: ["ARCH-001", "ARCH-002"]
      file_path: "architecture/2024/12/09-task-continuity/artifacts/architecture-diagram.md"
```

### Search Capabilities

**Semantic Search**
- Natural language queries for finding relevant decisions
- Context-aware search based on current project needs
- Similarity matching for architectural patterns
- Success rate weighted recommendations

**Faceted Search**
- Filter by category, impact level, date range
- Search by technology stack or domain
- Filter by success rate or confidence level
- Search by team or participant involvement

## �� INTEGRATION POINTS

### Memory Bank Mode Integration

**VAN Mode**
- Automatic loading of relevant historical decisions
- Pattern suggestions based on project context
- Success rate analysis for proposed approaches

**CREATIVE Mode**
- Real-time capture during creative sessions
- Template provision for structured decision making
- Quality scoring and feedback

**REFLECT Mode**
- Comparison of planned vs. implemented decisions
- Success rate updates based on implementation results
- Lesson learned extraction and documentation

**ARCHIVE Mode**
- Long-term preservation of creative artifacts
- Pattern effectiveness analysis
- Strategic knowledge synthesis

### Tool Integration

**IDE Integration**
- Automatic capture of design documents
- Real-time decision logging
- Template insertion and completion

**Version Control Integration**
- Automatic commit of creative artifacts
- Branch correlation with creative sessions
- Change tracking for decision evolution

**Communication Tools**
- Meeting notes integration
- Discussion thread capture
- Stakeholder feedback collection

This comprehensive capture system ensures that all creative phase outputs are systematically documented, preserved, and made available for future reference, creating a valuable knowledge base that improves over time.
